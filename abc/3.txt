1. What is a Mutable String in Java? Explain with an example

A Mutable String in Java is a string that can be changed after it's created. Unlike regular Strings which are immutable, mutable strings allow you to modify their contents directly.

Example:
import java.lang.StringBuilder;

public class MutableStringExample {
    public static void main(String[] args) {
        StringBuilder mutableString = new StringBuilder("Hello");
        mutableString.append(" World"); // Modifying the string
        System.out.println(mutableString); // Output: Hello World
    }
}

2. WAP to reverse a String

import java.util.Scanner;

public class ReverseString {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a string:   
 ");
        String inputString = scanner.nextLine();
        String   
 reversedString = "";
        for (int i = inputString.length() - 1; i >= 0; i--) {
            reversedString += inputString.charAt(i);
        }
        System.out.println("Reversed string: " + reversedString);   

    }
}

3. WAP to reverse a sentence while preserving the position


import java.util.Scanner;

public class ReverseSentence {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter   
 a sentence: ");
        String inputSentence = scanner.nextLine();
        String[] words = inputSentence.split("   
 ");
        String reversedSentence = "";
        for (int i = words.length - 1; i >= 0; i--) {
            reversedSentence += reverseWord(words[i]) + " ";
        }
        System.out.println("Reversed sentence: " + reversedSentence.trim());
    }

    private static String reverseWord(String word) {
        String reversedWord = "";
        for (int i = word.length() - 1; i >= 0; i--) {
            reversedWord += word.charAt(i);
        }
        return reversedWord;   

    }
}

4. WAP to sort a String Alphabetically


import java.util.Arrays;
import java.util.Scanner;

public class SortString {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter   
 a string: ");
        String inputString = scanner.nextLine();   

        char[] charArray = inputString.toCharArray();
        Arrays.sort(charArray);
        String sortedString = new String(charArray);
        System.out.println("Sorted   
 string: " + sortedString);
    }
}